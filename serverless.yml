service: checkout
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-west-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action: dynamodb:*
          Resource: !GetAtt bookTable.Arn
        - Effect: Allow
          Action: dynamodb:*
          Resource: !GetAtt userTable.Arn

functions:
  checkInventory:
    handler: handler.checkInventory
  calculateTotal:
    handler: handler.calculateTotal

stepFunctions:
  stateMachines:
    storeCheckoutFlow:
      name: storeCheckoutFlow
      definition:
        StartAt: checkInventory
        States:
          checkInventory:
            Type: Task
            Resource:
              Fn::GetAtt: [checkInventory, Arn]
            Catch:
              - ErrorEquals: [BookNotFound]
                Next: BookNotFoundError
              - ErrorEquals: [BookOutOfStock]
                Next: BookOutOfStockError
            Next: calculateTotal
          calculateTotal:
            Type: Task
            Resource:
              Fn::GetAtt: [calculateTotal, Arn]
            End: true
          BookNotFoundError:
            Type: Pass
            Result: "No such book is available"
            End: true
          BookOutOfStockError:
            Type: Pass
            Result: "Sorry, the book is out of stock"
            End: true

resources:
  Resources:
    bookTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: bookTable
        AttributeDefinitions:
          - AttributeName: bookId
            AttributeType: S
        KeySchema:
          - AttributeName: bookId
            KeyType: HASH
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: userTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH

plugins:
  - serverless-step-functions
